{"version":3,"sources":["Card.jsx","App.js","index.js"],"names":["Card","props","useState","isReadMore","setIsReadMore","className","style","maxWidth","maxHeight","backgroundColor","color","margin","boxSizing","heading","content","slice","cursor","onClick","datetime","App","takeHeading","takeContent","takeDatetime","takeColor","takeInput","settakeInput","pushInput","setpushInput","htmlFor","type","id","placeholder","value","onChange","args","target","alert","oldInputs","height","map","index","onSelect","e","getindex","updatecard","filter","ele","deletecard","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd7f65ea.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './bootstrap.css';\r\nimport './App.js';\r\n\r\nfunction Card(props){\r\n  const [isReadMore, setIsReadMore] = useState(true);\r\n\r\n  function toggler(){\r\n    setIsReadMore(!isReadMore);\r\n  }\r\n    return(\r\n        <>\r\n        <div className=\"card\" style={{ maxWidth: \"295px\",maxHeight: \"500px\", backgroundColor:props.color, margin:'10px', boxSizing:'content-box' }}>\r\n         <h3 className=\"card-header\">\r\n           {props.heading} \r\n         </h3>\r\n         <div className=\"card-body\">\r\n           <p className=\"card-text\">{isReadMore ? props.content.slice(0,200): props.content}\r\n            <span style={{cursor:'pointer', color:'yellow'}} onClick={toggler} >{isReadMore ? \">>>read more>>>\" : \"<<<show less<<<\"}</span></p>\r\n         </div>\r\n         <h6 className=\"card-footer d-flex justify-content-center\">\r\n          {props.datetime}\r\n         </h6>\r\n         </div>\r\n         </>\r\n    )\r\n}\r\n\r\nexport default Card;","import { useState } from \"react\";\nimport React from 'react';\nimport \"./bootstrap.css\";\nimport \"./App.css\";\nimport Card from './Card'\n\n\nfunction App() {\n  const [takeInput, settakeInput] = useState({takeHeading:'', takeContent:'', takeDatetime:'', takeColor:''});\n  const [pushInput, setpushInput] = useState([]);\n\n  function addCard(){\n    if(takeInput.takeHeading===''){alert('Provide Heading')}\n    else if(takeInput.takeContent===''){alert('Provide Content')}\n    else if(takeInput.takeDatetime===''){alert('Provide Date')}\n    else if(takeInput.takeColor===''){alert('Provide Color')}\n    else{setpushInput(oldInputs =>{ return [...oldInputs, takeInput]});}\n  }\n\n  function deletecard(getindex){\n    var updatecard=pushInput.filter((ele,index)=>{return getindex!==index});\n    setpushInput(updatecard);\n  }\n\n  function clearAll(){\n    setpushInput([]);\n  }\n\n  return (\n    <>\n        <div className=\"container bg-gradient\">\n          <div className=\"row\">\n            <div className=\"form-group col-6\">\n              <label htmlFor=\"PoemHeading\">Poem Heading</label>\n              <input type=\"text\" className=\"form-control\" id=\"PoemHeading\" placeholder=\"Type here...\" value={takeInput.takeHeading} onChange={(args)=>{settakeInput({...takeInput, takeHeading:args.target.value})}} />\n            </div>\n            <div className=\"form-group col-6\">\n              <label htmlFor=\"PoemContent\">Poem Content</label>\n              <textarea type=\"text\" className=\"form-control\" id=\"PoemContent\" placeholder=\"Type here...\" onChange={(args)=>{settakeInput({...takeInput, takeContent:args.target.value})}} />\n            </div>\n          </div>\n          <br />\n          <div className=\"row \">\n            <div className=\"form-group col-4\">\n              <input type=\"date\" className=\"form-control\" onChange={(args)=>{settakeInput({...takeInput, takeDatetime:args.target.value})}} />\n            </div>\n            <div className=\"form-group col-2\">\n                <input type=\"color\" className=\"form-control\"  onChange={(args)=>{settakeInput({...takeInput, takeColor:args.target.value})}}  />\n            </div>\n            <div className=\"form-group col-2\">\n              <button className=\"col-lg-12 btn btn-primary\" onClick={addCard}> Add </button>\n            </div>\n            <div className=\"form-group col-2\">\n              <button className=\"col-lg-12 btn btn-info\" type=\"reset\" > Delete </button>\n            </div>\n            <div className=\"form-group col-2\">\n              <button className=\"col-lg-12 btn btn-secondary\" type=\"reset\" onClick={clearAll}> Delete All </button>\n            </div>\n          </div>\n        </div>\n      <div className=\"container bg-gradient d-flex flex-wrap\" style={{ height:'auto', color:'white'}}>\n      { pushInput.map( (args,index) => \n       \n        <Card onSelect={(e)=>deletecard(e.index)} key={index} heading={args.takeHeading} content={args.takeContent} datetime={args.takeDatetime} color={args.takeColor} />\n     )}\n       </div>\n  </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App.js'\n\nReactDom.render(\n  <App/>, document.getElementById('root')\n)"],"sourceRoot":""}